name: CI/CD Pipeline

on:
  push:
    branches:
      - '*'  # Trigger for all branches

defaults:
  run:
    working-directory: ./kjell

env:
  AWS_REGION: eu-west-1
  S3_BUCKET: kjellsbucket2044  # Define the bucket name here for use throughout

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - run: pip install awscli
      - run: pip install aws-sam-cli
      - run: sam build --template-file template.yaml
        working-directory: ./kjell

  deploy:
    needs: build  # This job waits for the 'build' job to complete
    if: github.ref == 'refs/heads/main'  # Only runs for the 'main' branch
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - run: |
          echo "Checking if the S3 bucket exists..."
          if ! aws s3api head-bucket --bucket ${{ env.S3_BUCKET }} 2>&1; then
            echo "Bucket does not exist. Creating bucket..."
            aws s3 mb s3://${{ env.S3_BUCKET }} --region ${{ env.AWS_REGION }}
            echo "Bucket created."
          else
            echo "Bucket already exists."
          fi
        env:
          AWS_REGION: eu-west-1
          S3_BUCKET: kjellsbucket2044
          AWS_DEFAULT_REGION: eu-west-1
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        working-directory: ./kjell
      - name: Deploy SAM application
        run: |
            sam deploy \
              --stack-name candistack2044 \
              --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM \
              --region ${{ env.AWS_REGION }} \
              --s3-bucket ${{ env.S3_BUCKET }} \
              --no-fail-on-empty-changeset \
              --no-confirm-changeset \
              --parameter-overrides BucketNameParameter=${{ env.S3_BUCKET }}
        env:
          AWS_REGION: eu-west-1
          S3_BUCKET: kjellsbucket2044
          AWS_DEFAULT_REGION: eu-west-1
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        working-directory: ./kjell

  build-and-push-docker:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'  # Only runs for the 'main' branch
    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
        env:
          AWS_REGION: eu-west-1
          S3_BUCKET: kjellsbucket2044
          
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push the Docker image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: sporeb15-private
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f ../Dockerfile .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest


